<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Jinliang Yang</title>
        <description>Jinliang Yang - Jinliang Yang</description>
        <link>http://yangjl.com/en</link>
        <link>http://yangjl.com/en</link>
        <lastBuildDate>2015-06-03T12:59:56-07:00</lastBuildDate>
        <pubDate>2015-06-03T12:59:56-07:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>RNA-seq quantification comparison: K-mer vs. alignment approaches</title>
                <description>&lt;h1&gt;Background&lt;/h1&gt;

&lt;p&gt;RNA-seq short reads quantification, or simply, counting how many reads mapped to a set of genes, is the key step for differential expression analysis. Traditionally, reads were mapped to the reference genome and then were counted based on the mapping information. It normally takes days or weeks with multiple CPUs, just for the alignment. Recently, K-mer strategy was proposed as an alignment-free alternative, including &lt;a href=&quot;http://www.nature.com/nbt/journal/v32/n5/full/nbt.2862.html&quot;&gt;Sailfish&lt;/a&gt; and &lt;a href=&quot;http://arxiv.org/pdf/1505.02710v2.pdf&quot;&gt;kallisto&lt;/a&gt;. Strange names, are they?
Anyway, with no doubt, these K-mer approaches run much faster comparing to alignment-based approaches. See below figure stole from &lt;a href=&quot;http://www.cs.cmu.edu/~ckingsf/class/02-714/Lec05-sailfish.pdf&quot;&gt;Rob Patro&#39;s presentation&lt;/a&gt;.
&lt;img src=&quot;http://i.imgur.com/YVhf5tz.png&quot; alt=&quot;Imgur&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What is K-mer? Simply speaking, K-mer is a string of length K. For instance, &quot;ATCG&quot; is 4-mer sequence. For a given sequence of length N, it will extract &lt;code&gt;N-k+1&lt;/code&gt; k-mers.
&lt;img src=&quot;http://i.imgur.com/GQyglzb.png&quot; alt=&quot;Imgur&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The paradigm for a K-mer approach would be:&lt;br/&gt;
1. Build k-mer index of your target transcripts (e.g. your gene annotation).&lt;br/&gt;
2. Count k-mer in your RNA-seq reads.&lt;br/&gt;
3. Quantification.&lt;/p&gt;

&lt;h1&gt;Setup the experiment&lt;/h1&gt;

&lt;p&gt;To convince myself these approaches are as accurate as traditional ones, I setup an experiment to compare the results generated by both traditional alignment-based approach and K-mer approach. The analyzing codes were deposited in the github &lt;a href=&quot;https://github.com/yangjl/Demo&quot;&gt;repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, I downloaded some RNA-seq data from NCBI by using &lt;code&gt;wget&lt;/code&gt; and obtained the reference genome from &lt;a href=&quot;http://plants.ensembl.org/Oryza_indica/Info/Index&quot;&gt;EnsemblePlants&lt;/a&gt;. I used GSNAP for short reads alignment. And some bioconductor packages, including &lt;code&gt;GenomicFeatures&lt;/code&gt; and &lt;code&gt;GenomicAlignments&lt;/code&gt;, for read count quantification. The detailed procedure can be found &lt;a href=&quot;http://rpubs.com/yangjl0930/61344&quot;&gt;here for alignment&lt;/a&gt; and &lt;a href=&quot;http://rpubs.com/yangjl0930/60157&quot;&gt;here for quantification&lt;/a&gt;. Or a shorter version &lt;a href=&quot;http://rpubs.com/yangjl0930/63347&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;### get RNA-seq reads
wget get ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR/SRR117/SRR1174772/SRR1174772.sra
### get reference genome
wget ftp://ftp.ensemblgenomes.org/pub/plants/release-25/fasta/oryza_indica/dna/Oryza_indica.ASM465v1.25.dna.chromosome.*.fa.gz
### alignment with gmap
gmap_build -D largedata/OS_indica/ -d ASM465v1.25_gsnap -g Oryza_indica.ASM465v1.25.dna.chromosome*fa.gz &amp;gt; gmapbuild.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;The kallisto approach&lt;/h1&gt;

&lt;p&gt;I used a recently released K-mer approach &lt;a href=&quot;http://pachterlab.github.io/kallisto/&quot;&gt;kallisto&lt;/a&gt;. It is on github and are well documented. The whole procedure takes only two steps for both single-end and paired-end sequencing as below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;### indexing
kallisto index -k 31 -i Osativa_204_v7_1transcript Osativa_204_v7.0.transcript_primaryTranscriptOnly
### quantification
kallisto quant -i index -o output pairA_1.fastq pairA_2.fastq pairB_1.fastq pairB_2.fastq
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Comparing of the results&lt;/h1&gt;

&lt;p&gt;The Pearson&#39;s correlation coefficient (r) ranged from 0.8 to 0.94. That is an impressive correlation, indicating the &lt;code&gt;kallisto&lt;/code&gt; is indeed as accurate as alignment-based approach. I looked into the outliers on the left sides of the plots and found those dots were from genes with repeat sequences. Note that with the alignment-based approach, I kept only uniquely mapped reads for quantification purpose. After removing these several outlier genes, the correlations become more significant.&lt;/p&gt;

&lt;p&gt;Overall, I think &lt;code&gt;kallisto&lt;/code&gt; is a simple and rapid RNA-seq quantification alternative for alignment-based approach. However, &lt;code&gt;kallisto&lt;/code&gt; may over-estimate the read counts from genes containing repeats. For differential expression analysis, this may not be a critical problem since the over-estimation will not be biased.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/UVU28KJ.png&quot; alt=&quot;Imgur&quot; /&gt;&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/tech%20report/2015/06/03/rna-seq</link>
                <guid>http://yangjl.com/en/tech%20report/2015/06/03/rna-seq</guid>
                <pubDate>2015-06-03T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Compression related commands</title>
                <description>&lt;h2&gt;How to extract tar.gz file&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;tar -zxvf file.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;where, &lt;code&gt;-z&lt;/code&gt; works on gzip compression automatically when reading archives; &lt;code&gt;-x&lt;/code&gt;, extract archives; &lt;code&gt;-v&lt;/code&gt; produce verbose output; &lt;code&gt;-f&lt;/code&gt; read the archive from the archive to the specififed file.&lt;/p&gt;

&lt;h2&gt;How to get the first few lines from the *.gz file.&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;gzip -cd *.gz | head -n 30
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://yangjl.com/en/codes/2015/05/27/zip</link>
                <guid>http://yangjl.com/en/codes/2015/05/27/zip</guid>
                <pubDate>2015-05-27T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Notes on learning ANGSD</title>
                <description>&lt;p&gt;The biggest advantages of &lt;a href=&quot;http://popgen.dk/wiki/index.php/ANGSD&quot;&gt;ANGSD&lt;/a&gt; as they claimed are &quot;&lt;em&gt;Most methods take genotype uncertainty into account instead of basing the analysis on called genotypes. This is especially useful for low and medium depth data&lt;/em&gt;&quot;. The software was forked to my own &lt;a href=&quot;https://github.com/yangjl/angsd&quot;&gt;repo&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Install from Github&lt;/h1&gt;

&lt;p&gt;You also need to install &lt;code&gt;CRAM&lt;/code&gt; by &lt;code&gt;htslib&lt;/code&gt;, although I have no idea what CRAM is, I believe it might be something more fast or a space saving format (like SAM?). I have to say the installation become so easy with github!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/samtools/htslib.git  
git clone git://github.com/ANGSD/angsd.git   
cd angsd  
make  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Preparation for BAM input&lt;/h1&gt;

&lt;p&gt;The following codes all following ANGSD&#39;s tutorial.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;### download data
wget http://popgen.dk/software/download/angsd/bams.tar.gz
tar xf bams.tar.gz
### indexing them
for i in bams/*.bam;do samtools index $i;done
### create a list
ls bams/*.bam &amp;gt; bam.filelist
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;SNP and genotype calling&lt;/h1&gt;

&lt;p&gt;SNPs are called based on their allele frequencies by &lt;code&gt;-doMaf&lt;/code&gt;. Basically, they will call a SNP if a site has a minor allele frequency significantly different from 0. (Note: how about really minor allele?)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;### MAF for every basepair
angsd -bam bam.filelist -doMajorMinor 2 -doMaf 8  -doCounts 1 -out out

### SNP calling
angsd -bam bam.filelist -GL 1 -out outfile -doMaf 2 -SNP_pval 1e-6 -doMajorMinor 1

### Genotype Likelihoods
angsd -bam bam.filelist -GL 1 -doGlf 2 -doMajorMinor 1 -doMaf 2 -SNP_pval 2e-6 -out genolike -nThreads 10

### Genotype calling in one step
angsd -bam bam.filelist -GL 2 -out gatk_outfile -doMaf 2 -doMajorMinor 1 -SNP_pval 1e-6 -doGeno 5 -doPost 1 -postCutoff 0.95
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;with option &lt;code&gt;-doPlink 1&lt;/code&gt;, it will output PLINK format.&lt;/p&gt;

&lt;h1&gt;Population Genetics&lt;/h1&gt;
</description>
                <link>http://yangjl.com/en/notes/2015/05/27/angsd</link>
                <guid>http://yangjl.com/en/notes/2015/05/27/angsd</guid>
                <pubDate>2015-05-27T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Reading List</title>
                <description>&lt;h3&gt;Python and statistics books&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://work.thaslwanter.at/Stats/html/index.html&quot;&gt;Introduction to statistics 6.4 in python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/&quot;&gt;Probabilistic Programming and Bayesian Methods for Hackers&lt;/a&gt;: an introduction to Bayesian methods and probabilistic progamming from a computation/understanding-first, mathematics-second point of view.&lt;/li&gt;
&lt;/ol&gt;

</description>
                <link>http://yangjl.com/en/notes/2015/05/11/reading-list</link>
                <guid>http://yangjl.com/en/notes/2015/05/11/reading-list</guid>
                <pubDate>2015-05-11T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>LaTex citation undefined</title>
                <description>&lt;h3&gt;LaTex citation error for PLOS 1&lt;/h3&gt;

&lt;p&gt;If you got the following error message:
&lt;code&gt;
LaTex Warning: Citation on page undefined
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Just simply run latex twice, the first time, it will generate &lt;em&gt;.aux. The next time, bibtex will look for &lt;/em&gt;.aux.&lt;/p&gt;

&lt;h3&gt;LaTax track chanages&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;latexdiff old.tex new.tex &amp;gt; track.tex
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;diff through git&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;git diff --word-diff=color commit1 commit2
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://yangjl.com/en/notes/2015/05/10/latex</link>
                <guid>http://yangjl.com/en/notes/2015/05/10/latex</guid>
                <pubDate>2015-05-10T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>TASSEL GBS HDF5 format</title>
                <description>&lt;h3&gt;HDF5 Overview&lt;/h3&gt;

&lt;p&gt;HDF5 data file has hierarchical organization consisting of the groups and dataset. Groups can contain other groups and datasets, datasets contain complex multi-dimensional data. The organization looks similar to the regular UNIX file system, groups are analogous to directories, and datasets contain arbitrary data like regular files. Like directories, groups name the objects contained in them. This allows easy navigation from the &quot;top&quot; of the file to any object in that file, something like /groupA/groupB/dataset1.&lt;/p&gt;

&lt;p&gt;Datasets in HDF5 file have defined element type and layout. Layout determines the dimensionality of the data and the size of each dimension (shape of the dataset). Special case of a layout called scalar which means that dataset contains exactly one element of the given type. More common layouts are multidimensional layouts. Element type describes the structure of the basic element of these multidimensional arrays or scalars. Type can be atomic, compound, or array. Atomic types include usual numeric types such as integer, floating, etc. Compound type is a collection of atomic types or other compound types, very much like structures in programming languages. Array type for elements means that each dataset element is itself an array. One has to remember that all elements of a dataset have the same type and structure, e.g. if element type is an array then all elements have to have exactly the same dimensions.&lt;/p&gt;

&lt;p&gt;Groups and datasets in HDF5 could have a number of attributes attached to them which can be used to store some meta-information about the group or dataset as a whole. Each attribute has a name and associated value which usually hase some basic type - integer, float, string, etc. Attributes could be used for example to store begin/end time of the run or the run number.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://confluence.slac.stanford.edu/display/PSDM/How+to+access+HDF5+data+from+Python&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/notes/2015/04/15/hdf5</link>
                <guid>http://yangjl.com/en/notes/2015/04/15/hdf5</guid>
                <pubDate>2015-04-15T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Retrieving large SRA files from NCBI using Aspera</title>
                <description>&lt;p&gt;NCBI has started using 3rd party commercial software to improve SRA data transferring speeds &lt;strong&gt;Aspera&lt;/strong&gt;. The download rate can reach to hundreds MB/s.&lt;/p&gt;

&lt;p&gt;Here is how to use it in Linux:&lt;/p&gt;

&lt;h3&gt;1. Download it:&lt;/h3&gt;

&lt;p&gt;There are multiple different stuff there &lt;a href=&quot;http://downloads.asperasoft.com/downloads&quot;&gt;http://downloads.asperasoft.com/downloads&lt;/a&gt;. You should download this one for Linux system: &lt;a href=&quot;http://downloads.asperasoft.com/en/downloads/8?list&quot;&gt;Aspera connect&lt;/a&gt;, high-performance transfer browser plug-in.&lt;/p&gt;

&lt;h3&gt;2. Install it:&lt;/h3&gt;

&lt;p&gt;It is super simple for installation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ascp -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh -QT -l 100m anonftp@ftp-private.ncbi.nlm.nih.gov:/1GB ~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command line utility called &lt;strong&gt;ascp&lt;/strong&gt;, which is installed in
&lt;code&gt;
$HOME/.aspera/connect
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;3. Use it:&lt;/h3&gt;

&lt;p&gt;You can test it by downloading the &lt;em&gt;1GB&lt;/em&gt; file. Note that the public key file should point to &lt;em&gt;.openssh&lt;/em&gt; rather than &lt;em&gt;.putty&lt;/em&gt;, which was suggested by &lt;a href=&quot;http://wiki.bioinformatics.ucdavis.edu/index.php/Aspera_upload/download_to_NCBI&quot;&gt;others&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ascp -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh -QT -l 100m anonftp@ftp-private.ncbi.nlm.nih.gov:/1GB ~
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://yangjl.com/en/notes/2015/04/09/aspera</link>
                <guid>http://yangjl.com/en/notes/2015/04/09/aspera</guid>
                <pubDate>2015-04-09T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Git version control between laptop and linux server</title>
                <description>&lt;p&gt;I have a Mac laptop with multiple git-repositories. But my computational works are mostly carried out on a linux server. From/To there I push and pull changes via SSH. I would like to sync codes and data analysis results between the two systems. Here is what I learned from others experience via a post from &lt;a href=&quot;http://stackoverflow.com/questions/4948190/git-repository-sync-between-computers-when-moving-around&quot;&gt;stackoverflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Below, I modified a little bit from above post. Lets say my netbook is called &quot;Macbook&quot;. I create a repository there&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/git
$ mkdir newThing
$ cd newThing
$ git init --bare
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the Linux server I will then create a clone of it. Maybe I will add some files also&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone username@0.0.0.1:/home/username/git/newThing
$ git add .
$ git commit -m &quot;Initial&quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On my Mac, I will also add the Linux address.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add externalName username@address:/home/username/git/newThing
$ git pull externalName master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Something to read: &lt;a href=&quot;http://progit.org/&quot;&gt;http://progit.org/&lt;/a&gt;.&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/notes/2015/04/08/sync-git</link>
                <guid>http://yangjl.com/en/notes/2015/04/08/sync-git</guid>
                <pubDate>2015-04-08T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Attending #PAGXXIII at home</title>
                <description>&lt;p&gt;I missed #PAG meetings (International Plant &amp;amp; Animal Genome Conference) two years in a row partly because of my newborn. Thanks to the social media such as &lt;a href=&quot;https://twitter.com/&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;github.com&quot;&gt;Github&lt;/a&gt; and &lt;a href=&quot;http://www.slideshare.net/&quot;&gt;Slideshare&lt;/a&gt;, which keep people like me updated about the excitements (mainly biotech progresses) in San Diego. Here, I extracted some information from the web regarding #PAGXXIII and tried to digest the meeting info a little bit at home.&lt;/p&gt;

&lt;p&gt;All the tweets with the dash tag #PAGXXIII were obtained every day during the meeting and were achieved in this Github repo &lt;a href=&quot;https://github.com/yangjl/MeetingTweets&quot;&gt;MeetingTweets&lt;/a&gt;. It also includes the tweets from last year&#39;s meeting. Most of this code was adapted from &lt;a href=&quot;http://gettinggeneticsdone.blogspot.com/search/label/Twitter&quot;&gt;Stephen Turner&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1&gt;Meeting slides and notes&lt;/h1&gt;

&lt;h2&gt;Meeting Notes&lt;/h2&gt;

&lt;p&gt;Great PAG notes from @mclafave: &lt;a href=&quot;https://github.com/mlafave/meeting_notes/blob/master/PAG_XXIII_2015.txt&quot;&gt;see here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Slides&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PAG keynote slides: &lt;a href=&quot;http://t.co/v86FA2TSw8&quot;&gt;the NIH as a Digital Enterpreise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tomato genome SL2.50 and Beyond @SahaSurya &lt;a href=&quot;http://t.co/vR36JlIwKT&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.faang.org/pub/GiuffraE_PAG2015_FAANG.pdf&quot;&gt;FAANG talk&lt;/a&gt; @faangomics&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://t.co/mtQQ5eZhCK&quot;&gt;Facilitating the use of NGS data for data-driven biology&lt;/a&gt; @drbonohu&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;PAG tweeters to follow&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/yY0Tfye.png&quot; alt=&quot;Imgur&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1&gt;DAY ONE (2015-1-10)&lt;/h1&gt;

&lt;p&gt;I lost day one&#39;s data.&lt;/p&gt;

&lt;h1&gt;DAY TWO (2015-1-11)&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;&#39;wordcloud&#39;&lt;/strong&gt; of day one says that &quot;Ancient dna sequencing data can assembly, need to see booth now&quot;. Really?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/7B6rzAU.png?1&quot; alt=&quot;Imgur1&quot; /&gt;&lt;/p&gt;

&lt;h1&gt;DAY THREE (2015-1-12)&lt;/h1&gt;

&lt;p&gt;&quot;Brown bear genome data, great!&quot;
&lt;img src=&quot;http://i.imgur.com/0EWZrRb.png&quot; alt=&quot;Imgur2&quot; /&gt;&lt;/p&gt;

&lt;h1&gt;DAY FOUR (2015-1-13)&lt;/h1&gt;

&lt;p&gt;Feature of the day &quot;Assembly&quot;!
&lt;img src=&quot;http://i.imgur.com/o5cedhm.png&quot; alt=&quot;Imgur3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Twitters of the day.
&lt;img src=&quot;http://i.imgur.com/iGvmHIU.png&quot; alt=&quot;Imgur4&quot; /&gt;&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/notes/2015/01/12/pag2015</link>
                <guid>http://yangjl.com/en/notes/2015/01/12/pag2015</guid>
                <pubDate>2015-01-12T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Changing bash to zsh</title>
                <description>&lt;h1&gt;Why I change from &lt;code&gt;bash&lt;/code&gt; to &lt;code&gt;zsh&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/jaguardesignstudio/why-zsh-is-cooler-than-your-shell-16194692&quot;&gt;zsh is cooler than bash&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Oh-my-zsh&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Cheat sheat&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.bash2zsh.com/zsh_refcard/refcard.pdf&quot;&gt;Refcard&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/codes/2015/01/01/bash-to-zsh</link>
                <guid>http://yangjl.com/en/codes/2015/01/01/bash-to-zsh</guid>
                <pubDate>2015-01-01T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Python: meaning of __init__ and __main__</title>
                <description>&lt;h3&gt;What does &lt;code&gt;if __name__ == “__main__” do&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/419163/what-does-if-name-main-do&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the Python interpreter reads a source file, it executes all of the code found in it. Before executing the code, it will define a few special variables. For example, if the python interpreter is running that module (the source file) as the main program, it sets the special &lt;strong&gt;name&lt;/strong&gt; variable to have a value &quot;&lt;strong&gt;main&lt;/strong&gt;&quot;. If this file is being imported from another module, &lt;strong&gt;name&lt;/strong&gt; will be set to the module&#39;s name.
In the case of your script, let&#39;s assume that it&#39;s executing as the main function, e.g. you said something like&lt;br/&gt;
&lt;code&gt;python threading_example.py&lt;/code&gt;&lt;br/&gt;
on the command line. After setting up the special variables, it will execute the import statement and load those modules. It will then evaluate the def block, creating a function object and creating a variable called myfunction that points to the function object. It will then read the if statement and see that &lt;strong&gt;name&lt;/strong&gt; does equal &quot;&lt;strong&gt;main&lt;/strong&gt;&quot;, so it will execute the block shown there.&lt;/p&gt;

&lt;p&gt;One of the reasons for doing this is that sometimes you write a module (a .py file) where it can be executed directly. Alternatively, it can also be imported and used in another module. By doing the main check, you can have that code only execute when you want to run the module as a program and not have it execute when someone just wants to import your module and call your functions themselves.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://stackoverflow.com/questions/448271/what-is-init-py-for&quot;&gt;What is &lt;code&gt;__init__.py&lt;/code&gt; for?&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Files name &lt;strong&gt;init&lt;/strong&gt;.py are used to mark directories on disk as Python package directories. If you have the files&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;mydir/spam/__init__.py   
mydir/spam/module.py  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And mydir is on your path, you can import the code in module.py as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;import spam.module  
or  
from spam import module  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you remove the &lt;strong&gt;init&lt;/strong&gt;.py file, Python will no longer look for submodules inside that directory, so attempts to import the module will fail.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;init&lt;/strong&gt;.py file is usually empty, but can be used to export selected portions of the package under more convenient name, hold convenience functions, etc. Given the example above, the contents of the init module can be accessed as&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/codes/2014/12/16/Python-init-name</link>
                <guid>http://yangjl.com/en/codes/2014/12/16/Python-init-name</guid>
                <pubDate>2014-12-16T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>R equivalent functions in Pandas</title>
                <description>&lt;p&gt;Pandas &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/tutorials.html&quot;&gt;Tutorials&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Direct link to some useful functions&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Group by: &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/groupby.html?highlight=aggregate&quot;&gt;split-apply-combine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Comparison with &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/dev/comparison_with_r.html&quot;&gt;R/R libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;read.table&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;snpibd = pd.read_table(&quot;largedata/IBD/allsnps_11m_IBD.bed&quot;, sep=&quot;\t&quot;, header= None)
gerp = pd.read_csv(&quot;largedata/SNP/allsnps_11m_gerpv2_tidy.csv&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;replace = gsub&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;snpibd[3].replace(&quot;chr&quot;, &quot;&quot;, regex=True, inplace=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;paste&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;snpibd[&#39;snpid&#39;] = snpibd[3].map(str) + &quot;_&quot; + snpibd[2].map(str)
snpibd[&#39;ibdid&#39;] = snpibd[3].map(str) + &quot;_&quot; + snpibd[4].map(str)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;merge&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;snp11mgp = pd.merge(gerp130m[[&quot;snpid&quot;, &quot;N&quot;, &quot;RS&quot;]], snp11m, on=&#39;snpid&#39;, sort=False, how=&#39;right&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;write.csv&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;snp11mgp.to_csv(&quot;largedata/SNP/allsnps_11m_gerpv2.csv&quot;, index=False)
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://yangjl.com/en/codes/2014/12/15/Pandas</link>
                <guid>http://yangjl.com/en/codes/2014/12/15/Pandas</guid>
                <pubDate>2014-12-15T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>R package Data.Table Usage Notes</title>
                <description>&lt;p&gt;Most of those were learned from Kate Crosby&#39;s &lt;a href=&quot;https://github.com/kate-crosby/datatable_slides&quot;&gt;short tutorial&lt;/a&gt; in &lt;a href=&quot;http://www.rilab.org/&quot;&gt;RIL lab&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Read in data.frame rapidly with &lt;strong&gt;fread&lt;/strong&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;## tab delimited file
data &amp;lt;- fread(&quot;yourfile.txt&quot;, sep=&quot;\t&quot;)
## csv file
data &amp;lt;- fread(&quot;yourfile.csv&quot;, sep=&quot;,&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Subsetting dt&lt;/h2&gt;

&lt;h3&gt;:= NULL&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sub &amp;lt;- data[, c(&quot;chr&quot;, &quot;pos&quot;) := NULL]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;use function of &lt;strong&gt;subset&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sub &amp;lt;- subset(fulldata, select = c(&quot;chr&quot;, &quot;pos&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;.SD = &quot;Subset of Data.table&quot;&lt;/h3&gt;

&lt;p&gt;Select the 2nd row (SNP) for/of each chromosome!
&lt;code&gt;
dt &amp;lt;- dt[, .SD[2], by=chrom]
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Order data really quickly with setkey()&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# Here in chr and then pos
order.dt &amp;lt;- setkey(dt, &quot;chr&quot;, &quot;pos&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;More information&lt;/h2&gt;
</description>
                <link>http://yangjl.com/en/codes/2014/12/12/DataTable</link>
                <guid>http://yangjl.com/en/codes/2014/12/12/DataTable</guid>
                <pubDate>2014-12-12T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Usage of IRanges/GenomicRanges Bioconductor packages</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://www.bioconductor.org/packages/release/bioc/vignettes/GenomicRanges/inst/doc/GenomicRangesIntroduction.pdf&quot;&gt;&lt;strong&gt;introduction&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bioconductor.org/help/course-materials/2013/SeattleFeb2013/IntermediateSequenceAnalysis2013.pdf&quot;&gt;&lt;strong&gt;class&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pgfe.umassmed.edu/ou/archives/3122&quot;&gt;&lt;strong&gt;website&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Transform &lt;strong&gt;GRanges&lt;/strong&gt; to &lt;strong&gt;Data.Frame&lt;/strong&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cnvdf &amp;lt;- data.frame(chr=as.character(seqnames(mycnv)), start=start(mycnv), end=end(mycnv))
callcnv &amp;lt;- mcols(mycnv)
cnvdf &amp;lt;- cbind(cnvdf, callcnv)
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://yangjl.com/en/codes/2014/12/11/IRanges</link>
                <guid>http://yangjl.com/en/codes/2014/12/11/IRanges</guid>
                <pubDate>2014-12-11T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Bedtools Usage Notes</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://bedtools.readthedocs.org/en/latest/index.html&quot;&gt;&lt;strong&gt;Bedtools&lt;/strong&gt;&lt;/a&gt; contain several handy utilities for genomic data analysis, especially useful for feature intersection analysis by using the function &lt;strong&gt;intersect&lt;/strong&gt;. I like bedtools because of the simple &lt;strong&gt;BED&lt;/strong&gt; format and speed of their algorithm. Below listed some of my personal usage examples for your reference.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;BED and other formats&lt;/h2&gt;

&lt;h3&gt;BED &lt;a href=&quot;http://bedtools.readthedocs.org/en/latest/content/general-usage.html&quot;&gt;format&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;BED3: A BED file where each feature is described by &lt;em&gt;chrom&lt;/em&gt;, &lt;em&gt;start&lt;/em&gt;, and &lt;em&gt;end&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code class=&quot;&quot;&gt;For example: chr1 110 120  
Note: start is zero-based, where the first base in a chr is numbered 0. And the end is one-based. For example, a SNP at 10 should be coded as start=9, end=10.
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;BED4: &lt;em&gt;chrom&lt;/em&gt;, &lt;em&gt;start&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt; and &lt;em&gt;name&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Other genomic data format can be found from UCSC Genome Browser &lt;a href=&quot;http://genome.ucsc.edu/FAQ/FAQformat#format1&quot;&gt;website&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;h2&gt;Find SNPs in window, report SNPs and the windows they belong to.&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;bedtools intersect -a window.bed -b SNP.bed -wb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More details see here: &lt;a href=&quot;http://bedtools.readthedocs.org/en/latest/content/tools/intersect.html&quot;&gt;&lt;strong&gt;intersect&lt;/strong&gt;&lt;/a&gt;  &lt;br/&gt;
* &lt;strong&gt;-a:&lt;/strong&gt; window of bed format&lt;br/&gt;
* &lt;strong&gt;-b:&lt;/strong&gt; SNPs of bed format&lt;br/&gt;
* &lt;strong&gt;-wb:&lt;/strong&gt; write the original entry in B for each overlap&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/codes/2014/12/10/bedtools-practice</link>
                <guid>http://yangjl.com/en/codes/2014/12/10/bedtools-practice</guid>
                <pubDate>2014-12-10T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Using Rmarkdown and Github for Reproducible Research</title>
                <description>&lt;p&gt;Broadly speaking, reproducible research aims to generate and report data analyses and scientific claims in a reproducible manner. Or simply, by one click, others could re-generate the results you reported and the report itself. From my personal experience of several years of quantitative genetics research, the broad definition of reproducible research is too ambitious. In a real world study, normally we will spend many days, weeks or even years for data tweaking and hammering. In these processes, many versions of intermediate data will be generated, many parameters for model fitting were tried, and many figures were plotted and changed later. It is such a pain to reproduce a research even conducted by yourself, who normally carried out multiple research projects across years. Do not mention to share with others.&lt;/p&gt;

&lt;p&gt;Modern data analyses rely on tools. Thanks for the powerful R IDE: &lt;a href=&quot;http://www.rstudio.com/&quot;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt; and version control tool: &lt;a href=&quot;https://github.com/&quot;&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;, which largely make this idea of reproducible research feasible. After a workshop in &lt;a href=&quot;http://www.rilab.org/&quot;&gt;&lt;strong&gt;RILAB&lt;/strong&gt;&lt;/a&gt;, some of my colleagues show their interests in my workflow of project management and documentation, although it is far from completely reproducible. It encouraged me to blog it and share some of the tools that might be helpful for others. Here is the workflow I used.&lt;/p&gt;

&lt;h2&gt;Setup project&lt;/h2&gt;

&lt;p&gt;The right corner icon of &lt;strong&gt;RStudio&lt;/strong&gt; will enable you to manage your &lt;em&gt;New Project&lt;/em&gt;.    &lt;br/&gt;
I normally start a project with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#install.packages(&#39;ProjectTemplate&#39;)
library(&#39;ProjectTemplate&#39;)
create.project(&#39;temp&#39;)
system(&quot;mv temp/* .&quot;)
system(&quot;rm -r temp/&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;using &lt;strong&gt;GitHub&lt;/strong&gt; to do the version control&lt;/li&gt;
&lt;li&gt;using &lt;strong&gt;packrat&lt;/strong&gt; to do the R package dependency management&lt;/li&gt;
&lt;li&gt;using &lt;strong&gt;ProjectTemplate&lt;/strong&gt; to layout working directories&lt;/li&gt;
&lt;/ul&gt;

</description>
                <link>http://yangjl.com/en/reproducible/2014/11/20/work-flow</link>
                <guid>http://yangjl.com/en/reproducible/2014/11/20/work-flow</guid>
                <pubDate>2014-11-20T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>A show case of using Rmarkdown and Github for reproducible research</title>
                <description>&lt;h1&gt;Markdown&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; is a simple, easy-to-read, easy-to-write plain text format. The syntax of markdown could be printed in less than one page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; Heading
 =======

 Sub-heading
 -----------

 ### Another deeper heading

 Paragraphs are separated
 by a blank line.

 Let 2 spaces at the end of a line to do a  
 line break

 Text attributes *italic*,
 **bold**, `monospace`,~~monospace~~, `monospace` .

 A [link](http://example.com).

 Shopping list:

   * apples
   * oranges
   * pears

 Numbered list:

   1. apples
   2. oranges
   3. pears

 The rain---not the reign---in
 Spain.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Heading&lt;/h1&gt;

&lt;h2&gt;Sub-heading&lt;/h2&gt;

&lt;h3&gt;Another deeper heading&lt;/h3&gt;

&lt;p&gt;Paragraphs are separated
by a blank line.&lt;/p&gt;

&lt;p&gt;Let 2 spaces at the end of a line to do a&lt;br/&gt;
line break&lt;/p&gt;

&lt;p&gt;Text attributes &lt;em&gt;italic&lt;/em&gt;,
&lt;strong&gt;bold&lt;/strong&gt;, &lt;code&gt;monospace&lt;/code&gt;,&lt;del&gt;monospace&lt;/del&gt;, &lt;code&gt;monospace&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;A &lt;a href=&quot;http://example.com&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; Shopping list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; apples&lt;/li&gt;
&lt;li&gt; oranges&lt;/li&gt;
&lt;li&gt; pears&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; Numbered list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;. apples&lt;/li&gt;
&lt;li&gt;. oranges&lt;/li&gt;
&lt;li&gt;. pears&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt; The rain---not the reign---in
 Spain.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This is an example of a draft. Read more here: &lt;a href=&quot;http://jekyllrb.com/docs/drafts/&quot;&gt;http://jekyllrb.com/docs/drafts/&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/reproducible/2014/11/05/reproducible-research+copy</link>
                <guid>http://yangjl.com/en/reproducible/2014/11/05/reproducible-research copy</guid>
                <pubDate>2014-11-05T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Journal Club（2）</title>
                <description>&lt;p&gt;This nature&#39;s cover story &quot;THE GREEN HOURGLASS&quot; was really an exciting paper. I regret to not be able to fully capture it two years ago.&lt;/p&gt;

&lt;p&gt;The authors adapted the embryonic hourclass model proposed from vertebrates (as the figure show below) to plants, and provided the transcriptomic evidence from two complementary analyses. What is the embryonic hourclass? It refers to embryos from various taxa appear different in early stages, and converge to a similar form during mid-embryogenesis (or called phylotypic stage), and again diverge in later stages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/eRwvfhO.jpg&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recent analyses using zebrafish and &lt;em&gt;Drosophila&lt;/em&gt; demonstrated the transcriptome was dominated by ancient genes. Here in this paper, the authors calculated two different transcriptome indices: transcriptome age index (TAI) and transcriptome divergence index (TDI). The indices were computed across seven embryo stages. After visualization of the indices, clear hourclass patterns (see figure below from the paper) were found for both measurements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/BqI4EiL.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What we can learn from this study are that (1) try to answer historical or classical biological questions with modern resources and (2) use open data to do it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Quint, M., Drost, H.-G., Gabel, A., Ullrich, K. K., Bönn, M., &amp;amp; Grosse, I. (2012). A transcriptomic hourglass in plant embryogenesis. Nature, 490(7418), 98–101. doi:10.1038/nature11394
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;&lt;i class=&quot;icon-folder-open&quot;&gt;&lt;/i&gt;&lt;a href=&quot;http://www.ncbi.nlm.nih.gov/pubmed/22951968&quot;&gt;reference link:&lt;/a&gt;&lt;/h4&gt;
</description>
                <link>http://yangjl.com/en/journal%20club/2014/04/09/Journal-Club-2</link>
                <guid>http://yangjl.com/en/journal%20club/2014/04/09/Journal-Club-2</guid>
                <pubDate>2014-04-09T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>NGS data of Maize</title>
                <description>&lt;p&gt;We are now in the Big Data era, where &quot;the data scientist will become the most sexy job in the world&quot; said by &lt;a href=&quot;http://www.nytimes.com/2013/04/14/education/edlife/universities-offer-courses-in-a-hot-new-field-data-science.html?pagewanted=all&amp;amp;_r=0&quot;&gt;NYT&lt;/a&gt;. And the IT world frequently mentioned &quot;90% of the data in the world today has been created in the last two years alone&quot;. It seems like a strong wave of data explosion is coming!&lt;/p&gt;

&lt;p&gt;Amazing! However, I feel like we have nothing to do with it until recently when I checked the NCBI SRA database for a talk. I found that, we, the maize community, are right in the midst of the Big Data explosion. According to the database report, while after doing some accessions lookup, in the past several years, especially the last two years, about 13,000 Giga base-pairs were deposited from the maize community. That is about 6,500 depth of coverage of the maize genome if roughly assuming the maize genome is 2 Giba bases in size. This estimation not includes the on-going projects and non-submitted datasets. More importantly, this is happening just five years after the accomplishment of the maize B73 reference genome project. If we review the complete datasets in the SRA database, maize NGS data actually only accounted for &amp;lt; 0.1%. Until the end of Feb. 2014, more than 2,300 Tera bases reside there. The &quot;90% &lt;strong&gt;genome sequencing data&lt;/strong&gt; were generated in the past two years alone&quot;. See, IT&#39;s data theory could be perfectly aligned to the sequencing industry (see the figure below).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Mb5Z1Yi.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As the data explosion, NGS data&#39;s storage, sharing and publishing become a worldwide challenge. To overcome it, ~150 academic institutions and private companies went together to join the &lt;a href=&quot;http://genomicsandhealth.org/&quot;&gt;Global Alliance for Genomics and Health&lt;/a&gt;. While, &lt;a href=&quot;http://googleresearch.blogspot.co.uk/2014/02/google-joins-global-alliance-for.html&quot;&gt;Google Genomics&lt;/a&gt; is one of them. As the joining of some IT tycoons, &lt;strong&gt;genomics&lt;/strong&gt; now become a multi-disciplinary challenge. &lt;strong&gt;Genomics&lt;/strong&gt; and its related &lt;strong&gt;Bioinformatics&lt;/strong&gt; are upgraded to their 2.0 version. I never thought that, trained as a geneticist, I may one day work for Google. Good, bad or ironic? It might be too optimistic. There is a long way to go and the industries are actually more interested in the human health related area. As a relative small research community for maize or plant genomics studies, we are less attractive from industry&#39;s point of view.&lt;/p&gt;

&lt;p&gt;Here, I will try to interpret the maize NGS data a little. This kind of study may be extended to other crop species later. After a close look, the data presented their own story. This kind of story might not be extracted from the papers alone. Below, I listed the top 10 maize projects according to their data output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/01JWlMz.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the above figure, it seems like the maize genetic studies were expanding from their traditional research areas. Thanks to the continuous declining of the sequencing price, many genome wide studies become possible, such as geno-pheno association, transcriptome, methylome, etc. At the same time, the resources and talents were under &quot;exon reshuffling&quot; during this process. Some Chinese groups, including those from CAU, CAAS and Huazhong Agricultural University are rising.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Top 10 projects （&lt;a href=&quot;/data/SRA_maize_030614.csv&quot;&gt;download complete table&lt;/a&gt;）&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Order&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Center&lt;/strong&gt; &lt;/th&gt;
&lt;th style=&quot;text-align:center;&quot;&gt; &lt;strong&gt;Size (Gb)&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;Summary&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;CAAS         &lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;2426        &lt;/td&gt;
&lt;td&gt;transcriptome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;MSU-BUELL    &lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;1247      &lt;/td&gt;
&lt;td&gt;Pan Transcriptome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;CAU          &lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;1224      &lt;/td&gt;
&lt;td&gt;Genome Re-sequencing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;CSHL         &lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;964       &lt;/td&gt;
&lt;td&gt;Maize HapMap II  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Academia Sinica&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;626     &lt;/td&gt;
&lt;td&gt;Transcriptome of maize embryonic leaves &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;University of Minnesota&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;619&lt;/td&gt;
&lt;td&gt;Transcriptome of IBM RILs &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;CSHL          &lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;572&lt;/td&gt;
&lt;td&gt;Methylome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;ISU           &lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;512          &lt;/td&gt;
&lt;td&gt;Zeanome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Cornell University&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;493&lt;/td&gt;
&lt;td&gt;Breeding efforts in Africa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;MSU-BUELL&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;450&lt;/td&gt;
&lt;td&gt;Gene Expression of vitamin biosynthesis&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;hr /&gt;

&lt;p&gt;In the U.S., from the above summary table of the sequencing data, I learned that different labs have their own focus. The &lt;strong&gt;lab&lt;/strong&gt; here, sometimes, should also refer to the efforts from their collaborators. Among these labs, Buckler&#39;s group at Cornell, after finishing the zea mays HapMap project, was now aiming to sequencing every species of maize in the world using Genotyping-By-Sequencing (GBS). Recently, Buell&#39;s lab at MSU released a large set of transcriptomic data. This group may lead the maize transcriptome analysis in the future. A group at CSHL did a lot of Methylome study. Another group at CSHL, Jackson&#39;s lab, focused on the development studies, their efforts of transcriptomic sequencing at various developmental stages may eventually lead to a developmentome (I invented this term) some day. Other research subjects, such as ISU&#39;s Zeanome and PAV, UC Davis R-I group&#39;s domestication and evolution and University of Minnesota&#39;s IBM RIL eQTL mapping, et. al..&lt;/p&gt;

&lt;p&gt;Sequencing alone could not solve the biological problems until applied with sophisticated analyses. When genetics meets Big Data, the analysis itself become a problem. Traditional training did not prepared genetists with big data skills. In the future, the one who mastering the data tools and making sense of data would be more likely to success I guess. Genetics is now not limited to pipetting, pollinating or cloning, coding skills should be added to our toolkit as well.&lt;/p&gt;

&lt;p&gt;Big Data era in maize is coming, are you ready yet?&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/bigdata%20of%20maize/2014/03/05/NCBI-SRA</link>
                <guid>http://yangjl.com/en/bigdata%20of%20maize/2014/03/05/NCBI-SRA</guid>
                <pubDate>2014-03-05T00:00:00-08:00</pubDate>
        </item>

        <item>
                <title>Jekyll Introduction</title>
                <description>&lt;p&gt;This Jekyll introduction will outline specifically  what Jekyll is and why you would want to use it.
Directly following the intro we&#39;ll learn exactly &lt;em&gt;how&lt;/em&gt; Jekyll does what it does.&lt;/p&gt;

&lt;h2&gt;Overview&lt;/h2&gt;

&lt;h3&gt;What is Jekyll?&lt;/h3&gt;

&lt;p&gt;Jekyll is a parsing engine bundled as a ruby gem used to build static websites from
dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &quot;a simple, blog aware, static site generator&quot;.&lt;/p&gt;

&lt;h3&gt;Examples&lt;/h3&gt;

&lt;p&gt;This website is created with Jekyll. &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Sites&quot;&gt;Other Jekyll websites&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;What does Jekyll Do?&lt;/h3&gt;

&lt;p&gt;Jekyll is a ruby gem you install on your local system.
Once there you can call &lt;code&gt;jekyll --server&lt;/code&gt; on a directory and provided that directory
is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files,
compute categories, tags, permalinks, and construct your pages from layout templates and partials.&lt;/p&gt;

&lt;p&gt;Once parsed, Jekyll stores the result in a self-contained static &lt;code&gt;_site&lt;/code&gt; folder.
The intention here is that you can serve all contents in this folder statically from a plain static web-server.&lt;/p&gt;

&lt;p&gt;You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags
on each request, Jekyll does this once &lt;em&gt;beforehand&lt;/em&gt; and caches the &lt;em&gt;entire website&lt;/em&gt; in a folder for serving statically.&lt;/p&gt;

&lt;h3&gt;Jekyll is Not Blogging Software&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Jekyll is a parsing engine.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jekyll does not come with any content nor does it have any templates or design elements.
This is a common source of confusion when getting started.
Jekyll does not come with anything you actually use or see on your website - you have to make it.&lt;/p&gt;

&lt;h3&gt;Why Should I Care?&lt;/h3&gt;

&lt;p&gt;Jekyll is very minimalistic and very efficient.
The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server.
Traditional dynamic blogs like Wordpress require a database and server-side code.
Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.&lt;/p&gt;

&lt;p&gt;Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developers like Jekyll because we can write content like we write code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ability to write content in markdown or textile in your favorite text-editor.&lt;/li&gt;
&lt;li&gt;Ability to write and preview your content via localhost.&lt;/li&gt;
&lt;li&gt;No internet connection required.&lt;/li&gt;
&lt;li&gt;Ability to publish via git.&lt;/li&gt;
&lt;li&gt;Ability to host your blog on a static web-server.&lt;/li&gt;
&lt;li&gt;Ability to host freely on GitHub Pages.&lt;/li&gt;
&lt;li&gt;No database required.&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;How Jekyll Works&lt;/h1&gt;

&lt;p&gt;The following is a complete but concise outline of exactly how Jekyll works.&lt;/p&gt;

&lt;p&gt;Be aware that core concepts are introduced in rapid succession without code examples.
This information is not intended to specifically teach you how to do anything, rather it
is intended to give you the &lt;em&gt;full picture&lt;/em&gt; relative to what is going on in Jekyll-world.&lt;/p&gt;

&lt;p&gt;Learning these core concepts should help you avoid common frustrations and ultimately
help you better understand the code examples contained throughout Jekyll-Bootstrap.&lt;/p&gt;

&lt;h2&gt;Initial Setup&lt;/h2&gt;

&lt;p&gt;After &lt;a href=&quot;/index.html#start-now&quot;&gt;installing jekyll&lt;/a&gt; you&#39;ll need to format your website directory in a way jekyll expects.
Jekyll-bootstrap conveniently provides the base directory format.&lt;/p&gt;

&lt;h3&gt;The Jekyll Application Base Format&lt;/h3&gt;

&lt;p&gt;Jekyll expects your website directory to be laid out like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 2011-10-25-open-source-is-good.markdown
|   |-- 2011-04-26-hello-world.markdown
|-- _site
|-- index.html
|-- assets
    |-- css
        |-- style.css
    |-- javascripts
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;&lt;br/&gt;
  Stores configuration data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;_includes&lt;/strong&gt;&lt;br/&gt;
  This folder is for partial views.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;_layouts&lt;/strong&gt; &lt;br/&gt;
  This folder is for the main templates your content will be inserted into.
  You can have different layouts for different pages or page sections.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;_posts&lt;/strong&gt;&lt;br/&gt;
  This folder contains your dynamic content/posts.
  the naming format is required to be &lt;code&gt;@YEAR-MONTH-DATE-title.MARKUP@&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;_site&lt;/strong&gt;&lt;br/&gt;
  This is where the generated site will be placed once Jekyll is done transforming it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;assets&lt;/strong&gt;&lt;br/&gt;
  This folder is not part of the standard jekyll structure.
  The assets folder represents &lt;em&gt;any generic&lt;/em&gt; folder you happen to create in your root directory.
  Directories and files not properly formatted for jekyll will be left untouched for you to serve normally.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(read more: &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Usage&quot;&gt;https://github.com/mojombo/jekyll/wiki/Usage&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Jekyll Configuration&lt;/h3&gt;

&lt;p&gt;Jekyll supports various configuration options that are fully outlined here:
&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Configuration&quot;&gt;https://github.com/mojombo/jekyll/wiki/Configuration&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Content in Jekyll&lt;/h2&gt;

&lt;p&gt;Content in Jekyll is either a post or a page.
These content &quot;objects&quot; get inserted into one or more templates to build the final output for its respective static-page.&lt;/p&gt;

&lt;h3&gt;Posts and Pages&lt;/h3&gt;

&lt;p&gt;Both posts and pages should be written in markdown, textile, or HTML and may also contain Liquid templating syntax.
Both posts and pages can have meta-data assigned on a per-page basis such as title, url path, as well as arbitrary custom meta-data.&lt;/p&gt;

&lt;h3&gt;Working With Posts&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Post&lt;/strong&gt; &lt;br/&gt;
Posts are created by properly formatting a file and placing it the &lt;code&gt;_posts&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br/&gt;
A post must have a valid filename in the form &lt;code&gt;YEAR-MONTH-DATE-title.MARKUP&lt;/code&gt; and be placed in the &lt;code&gt;_posts&lt;/code&gt; directory.
If the data format is invalid Jekyll will not recognize the file as a post. The date and title are automatically parsed from the filename of the post file.
Additionally, each file must have &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;YAML Front-Matter&lt;/a&gt; prepended to its content.
YAML Front-Matter is a valid YAML syntax specifying meta-data for the given file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Order&lt;/strong&gt;&lt;br/&gt;
Ordering is an important part of Jekyll but it is hard to specify a custom ordering strategy.
Only reverse chronological and chronological ordering is supported in Jekyll.&lt;/p&gt;

&lt;p&gt;Since the date is hard-coded into the filename format, to change the order, you must change the dates in the filenames.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt; &lt;br/&gt;
Posts can have tags associated with them as part of their meta-data.
Tags may be placed on posts by providing them in the post&#39;s YAML front matter.
You have access to the post-specific tags in the templates. These tags also get added to the sitewide collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories&lt;/strong&gt; &lt;br/&gt;
Posts may be categorized by providing one or more categories in the YAML front matter.
Categories offer more significance over tags in that they can be reflected in the URL path to the given post.
Note categories in Jekyll work in a specific way.
If you define more than one category you are defining a category hierarchy &quot;set&quot;.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title :  Hello World
categories : [lessons, beginner]
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This defines the category hierarchy &quot;lessons/beginner&quot;. Note this is &lt;em&gt;one category&lt;/em&gt; node in Jekyll.
You won&#39;t find &quot;lessons&quot; and &quot;beginner&quot; as two separate categories unless you define them elsewhere as singular categories.&lt;/p&gt;

&lt;h3&gt;Working With Pages&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Page&lt;/strong&gt;&lt;br/&gt;
Pages are created by properly formatting a file and placing it anywhere in the root directory or subdirectories that do &lt;em&gt;not&lt;/em&gt; start with an underscore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br/&gt;
In order to register as a Jekyll page the file must contain &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;YAML Front-Matter&lt;/a&gt;.
Registering a page means 1) that Jekyll will process the page and 2) that the page object will be available in the &lt;code&gt;site.pages&lt;/code&gt; array for inclusion into your templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories and Tags&lt;/strong&gt;&lt;br/&gt;
Pages do not compute categories nor tags so defining them will have no effect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sub-Directories&lt;/strong&gt;&lt;br/&gt;
If pages are defined in sub-directories, the path to the page will be reflected in the url.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- people
    |-- bob
        |-- essay.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This page will be available at &lt;code&gt;http://yourdomain.com/people/bob/essay.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended Pages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;br/&gt;
You will always want to define the root index.html page as this will display on your root URL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;404.html&lt;/strong&gt;&lt;br/&gt;
Create a root 404.html page and GitHub Pages will serve it as your 404 response.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sitemap.html&lt;/strong&gt;&lt;br/&gt;
Generating a sitemap is good practice for SEO.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;about.html&lt;/strong&gt;&lt;br/&gt;
A nice about page is easy to do and gives the human perspective to your website.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Templates in Jekyll&lt;/h2&gt;

&lt;p&gt;Templates are used to contain a page&#39;s or post&#39;s content.
All templates have access to a global site object variable: &lt;code&gt;site&lt;/code&gt; as well as a page object variable: &lt;code&gt;page&lt;/code&gt;.
The site variable holds all accessible content and metadata relative to the site.
The page variable holds accessible data for the given page or post being rendered at that point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a Template&lt;/strong&gt;&lt;br/&gt;
Templates are created by properly formatting a file and placing it in the &lt;code&gt;_layouts&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br/&gt;
Templates should be coded in HTML and contain YAML Front Matter.
All templates can contain Liquid code to work with your site&#39;s data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rending Page/Post Content in a Template&lt;/strong&gt;&lt;br/&gt;
There is a special variable in all templates named : &lt;code&gt;content&lt;/code&gt;.
The &lt;code&gt;content&lt;/code&gt; variable holds the page/post content including any sub-template content previously defined.
Render the content variable wherever you want your main content to be injected into your template:&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;&lt;code&gt;...
&amp;lt;body&amp;gt;
  &amp;lt;div id=&quot;sidebar&quot;&amp;gt; ... &amp;lt;/div&amp;gt;
  &amp;lt;div id=&quot;main&quot;&amp;gt;
    &amp;#123;{content}&amp;#125;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;h3&gt;Sub-Templates&lt;/h3&gt;

&lt;p&gt;Sub-templates are exactly templates with the only difference being they
define another &quot;root&quot; layout/template within their YAML Front Matter.
This essentially means a template will render inside of another template.&lt;/p&gt;

&lt;h3&gt;Includes&lt;/h3&gt;

&lt;p&gt;In Jekyll you can define include files by placing them in the &lt;code&gt;_includes&lt;/code&gt; folder.
Includes are NOT templates, rather they are just code snippets that get included into templates.
In this way, you can treat the code inside includes as if it was native to the parent template.&lt;/p&gt;

&lt;p&gt;Any valid template code may be used in includes.&lt;/p&gt;

&lt;h2&gt;Using Liquid for Templating&lt;/h2&gt;

&lt;p&gt;Templating is perhaps the most confusing and frustrating part of Jekyll.
This is mainly due to the fact that Jekyll templates must use the Liquid Templating Language.&lt;/p&gt;

&lt;h3&gt;What is Liquid?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Shopify/liquid&quot;&gt;Liquid&lt;/a&gt; is a secure templating language developed by &lt;a href=&quot;http://shopify.com&quot;&gt;Shopify&lt;/a&gt;.
Liquid is designed for end-users to be able to execute logic within template files
without imposing any security risk on the hosting server.&lt;/p&gt;

&lt;p&gt;Jekyll uses Liquid to generate the post content within the final page layout structure and as the primary interface for working with
your site and post/page data.&lt;/p&gt;

&lt;h3&gt;Why Do We Have to Use Liquid?&lt;/h3&gt;

&lt;p&gt;GitHub uses Jekyll to power &lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;.
GitHub cannot afford to run arbitrary code on their servers so they lock developers down via Liquid.&lt;/p&gt;

&lt;h3&gt;Liquid is Not Programmer-Friendly.&lt;/h3&gt;

&lt;p&gt;The short story is liquid is not real code and its not intended to execute real code.
The point being you can&#39;t do jackshit in liquid that hasn&#39;t been allowed explicitly by the implementation.
What&#39;s more you can only access data-structures that have been explicitly passed to the template.&lt;/p&gt;

&lt;p&gt;In Jekyll&#39;s case it is not possible to alter what is passed to Liquid without hacking the gem or running custom plugins.
Both of which cannot be supported by GitHub Pages.&lt;/p&gt;

&lt;p&gt;As a programmer - this is very frustrating.&lt;/p&gt;

&lt;p&gt;But rather than look a gift horse in the mouth we are going to
suck it up and view it as an opportunity to work around limitations and adopt client-side solutions when possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aside&lt;/strong&gt; &lt;br/&gt;
My personal stance is to not invest time trying to hack liquid. It&#39;s really unnecessary
&lt;em&gt;from a programmer&#39;s&lt;/em&gt; perspective. That is to say if you have the ability to run custom plugins (i.e. run arbitrary ruby code)
you are better off sticking with ruby. Toward that end I&#39;ve built &lt;a href=&quot;http://github.com/plusjade/mustache-with-jekyll&quot;&gt;Mustache-with-Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Static Assets&lt;/h2&gt;

&lt;p&gt;Static assets are any file in the root or non-underscored subfolders that are not pages.
That is they have no valid YAML Front Matter and are thus not treated as Jekyll Pages.&lt;/p&gt;

&lt;p&gt;Static assets should be used for images, css, and javascript files.&lt;/p&gt;

&lt;h2&gt;How Jekyll Parses Files&lt;/h2&gt;

&lt;p&gt;Remember Jekyll is a processing engine. There are two main types of parsing in Jekyll.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content parsing.&lt;/strong&gt; &lt;br/&gt;
  This is done with textile or markdown.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Template parsing.&lt;/strong&gt; &lt;br/&gt;
This is done with the liquid templating language.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And thus there are two main types of file formats needed for this parsing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Post and Page files.&lt;/strong&gt;&lt;br/&gt;
All content in Jekyll is either a post or a page so valid posts and pages are parsed with markdown or textile.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Template files.&lt;/strong&gt;  &lt;br/&gt;
  These files go in &lt;code&gt;_layouts&lt;/code&gt; folder and contain your blogs &lt;strong&gt;templates&lt;/strong&gt;. They should be made in HTML with the help of Liquid syntax.
  Since include files are simply injected into templates they are essentially parsed as if they were native to the template.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Arbitrary files and folders.&lt;/strong&gt; &lt;br/&gt;
Files that &lt;em&gt;are not&lt;/em&gt; valid pages are treated as static content and pass through
Jekyll untouched and reside on your blog in the exact structure and format they originally existed in.&lt;/p&gt;

&lt;h3&gt;Formatting Files for Parsing.&lt;/h3&gt;

&lt;p&gt;We&#39;ve outlined the need for valid formatting using &lt;strong&gt;YAML Front Matter&lt;/strong&gt;.
Templates, posts, and pages all need to provide valid YAML Front Matter even if the Matter is empty.
This is the only way Jekyll knows you want the file processed.&lt;/p&gt;

&lt;p&gt;YAML Front Matter must be prepended to the top of template/post/page files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
category : pages
tags : [how-to, jekyll]
---

... contents ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Three hyphens on a new line start the Front-Matter block and three hyphens on a new line end the block.
The data inside the block must be valid YAML.&lt;/p&gt;

&lt;p&gt;Configuration parameters for YAML Front-Matter is outlined here:
&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;A comprehensive explanation of YAML Front Matter&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Defining Layouts for Posts and Templates Parsing.&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;layout&lt;/code&gt; parameter in the YAML Front Matter defines the template file for which the given post or template should be injected into.
If a template file specifies its own layout, it is effectively being used as a &lt;code&gt;sub-template.&lt;/code&gt;
That is to say loading a post file into a template file that refers to another template file with work in the way you&#39;d expect; as a nested sub-template.&lt;/p&gt;

&lt;h2&gt;How Jekyll Generates the Final Static Files.&lt;/h2&gt;

&lt;p&gt;Ultimately, Jekyll&#39;s job is to generate a static representation of your website.
The following is an outline of how that&#39;s done:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jekyll collects data.&lt;/strong&gt; &lt;br/&gt;
Jekyll scans the posts directory and collects all posts files as post objects. It then scans the layout assets and collects those and finally scans other directories in search of pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jekyll computes data.&lt;/strong&gt; &lt;br/&gt;
Jekyll takes these objects, computes metadata (permalinks, tags, categories, titles, dates) from them and constructs one
big &lt;code&gt;site&lt;/code&gt; object that holds all the posts, pages, layouts, and respective metadata.
At this stage your site is one big computed ruby object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jekyll liquifies posts and templates.&lt;/strong&gt;&lt;br/&gt;
Next jekyll loops through each post file and converts (through markdown or textile) and &lt;strong&gt;liquifies&lt;/strong&gt; the post inside of its respective layout(s).
Once the post is parsed and liquified inside the the proper layout structure, the layout itself is &quot;liquified&quot;. &lt;br/&gt;
 &lt;strong&gt;Liquification&lt;/strong&gt; is defined as follows: Jekyll initiates a Liquid template, and passes a simpler hash representation of the ruby site object as well as a simpler
hash representation of the ruby post object. These simplified data structures are what you have access to in the templates.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jekyll generates output.&lt;/strong&gt; &lt;br/&gt;
 Finally the liquid templates are &quot;rendered&quot;, thereby processing any liquid syntax provided in the templates
 and saving the final, static representation of the file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;strong&gt;Notes.&lt;/strong&gt;&lt;br/&gt;
Because Jekyll computes the entire site in one fell swoop, each template is given access to
a global &lt;code&gt;site&lt;/code&gt; hash that contains useful data. It is this data that you&#39;ll iterate through and format
using the Liquid tags and filters in order to render it onto a given page.&lt;/p&gt;

&lt;p&gt;Remember, in Jekyll you are an end-user. Your API has only two components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The manner in which you setup your directory.&lt;/li&gt;
&lt;li&gt;The liquid syntax and variables passed into the liquid templates.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;All the data objects available to you in the templates via Liquid are outlined in the &lt;strong&gt;API Section&lt;/strong&gt; of Jekyll-Bootstrap.
You can also read the original documentation here: &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Template-Data&quot;&gt;https://github.com/mojombo/jekyll/wiki/Template-Data&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope this paints a clearer picture of what Jekyll is doing and why it works the way it does.
As noted, our main programming constraint is the fact that our API is limited to what is accessible via Liquid and Liquid only.&lt;/p&gt;

&lt;p&gt;Jekyll-bootstrap is intended to provide helper methods and strategies aimed at making it more intuitive and easier to work with Jekyll =)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt; for reading this far.&lt;/p&gt;

&lt;h2&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Please take a look at &lt;a href=&quot;&quot;&gt;&lt;/a&gt;
or jump right into &lt;a href=&quot;&quot;&gt;Usage&lt;/a&gt; if you&#39;d like.&lt;/p&gt;
</description>
                <link>http://yangjl.com/en/lessons/2011/12/29/jekyll-introduction</link>
                <guid>http://yangjl.com/en/lessons/2011/12/29/jekyll-introduction</guid>
                <pubDate>2011-12-29T00:00:00-08:00</pubDate>
        </item>


</channel>
</rss>
